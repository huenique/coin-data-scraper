"""
This type stub file was generated by pyright.
"""

from engineio import json as _json

packet_names = ...

class Packet:
    """Socket.IO packet."""

    uses_binary_events = ...
    json = _json
    def __init__(
        self,
        packet_type=...,
        data=...,
        namespace=...,
        id=...,
        binary=...,
        encoded_packet=...,
    ) -> None: ...
    def encode(self):  # -> list[Any | str] | str:
        """Encode the packet for transmission.

        If the packet contains binary elements, this function returns a list
        of packets where the first is the original packet with placeholders for
        the binary components and the remaining ones the binary attachments.
        """
        ...

    def decode(self, encoded_packet):  # -> int:
        """Decode a transmitted package.

        The return value indicates how many binary attachment packets are
        necessary to fully decode the packet.
        """
        ...

    def add_attachment(self, attachment):  # -> bool:
        ...
    def reconstruct_binary(self, attachments):  # -> None:
        """Reconstruct a decoded packet using the given list of binary
        attachments.
        """
        ...
