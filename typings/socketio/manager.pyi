"""
This type stub file was generated by pyright.
"""

from . import base_manager

default_logger = ...

class Manager(base_manager.BaseManager):
    """Manage client connections.

    This class keeps track of all the clients and the rooms they are in, to
    support the broadcasting of messages. The data used by this class is
    stored in a memory structure, making it appropriate only for single process
    services. More sophisticated storage backends can be implemented by
    subclasses.
    """
    def can_disconnect(self, sid, namespace):  # -> bool:
        ...
    def emit(
        self,
        event,
        data,
        namespace,
        room=...,
        skip_sid=...,
        callback=...,
        to=...,
        **kwargs,
    ):  # -> None:
        """Emit a message to a single client, a room, or all the clients
        connected to the namespace."""
        ...

    def disconnect(self, sid, namespace, **kwargs):  # -> None:
        """Register a client disconnect from a namespace."""
        ...

    def enter_room(self, sid, namespace, room, eio_sid=...):  # -> None:
        """Add a client to a room."""
        ...

    def leave_room(self, sid, namespace, room):  # -> None:
        """Remove a client from a room."""
        ...

    def close_room(self, room, namespace):  # -> None:
        """Remove all participants from a room."""
        ...

    def trigger_callback(self, sid, id, data):  # -> None:
        """Invoke an application callback."""
        ...
